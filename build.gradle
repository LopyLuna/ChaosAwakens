buildscript {
	repositories {
		maven { url = "https://maven.minecraftforge.net/" }
		maven { url = "https://maven.parchmentmc.org" }
		maven { url = "https://repo.spongepowered.org/maven" }
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true)
		classpath("org.parchmentmc:librarian:1.+")
		classpath(group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT")
		classpath(group: "com.github.jengelman.gradle.plugins", name: "shadow", version: "5.2.0")
	}
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: "org.spongepowered.mixin"
apply plugin: "eclipse"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java"
apply plugin: "maven-publish"

group = "io.github"
version = "${minecraft_version}-${mod_version}"
archivesBaseName = project.modId

java.toolchain.languageVersion = JavaLanguageVersion.of 8

minecraft {
	mappings channel: "${mappings_channel}", version: "${mappings_version}"

	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

	runs {
		client {
			workingDirectory project.file('run')

			arg "-Dgeckolib.disable_examples=true"

			arg "-mixin.config=${modId}.mixins.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			property 'forge.logging.markers', 'SCAN'
			property 'forge.logging.console.level', 'debug'

			// jvmArgs "-XXaltjvm=dcevm"

			mods {
				"${modId}" {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			arg "-mixin.config=${modId}.mixins.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			property 'forge.logging.markers', 'SCAN'
			property 'forge.logging.console.level', 'debug'

			//jvmArgs "-XXaltjvm=dcevm"// , "-Xms12G", "-Xmx16G", "-XX:+UseG1GC", "-XX:+UnlockExperimentalVMOptions", "-XX:MaxGCPauseMillis=100", "-XX:+DisableExplicitGC", "-XX:TargetSurvivorRatio=90", "-XX:G1NewSizePercent=35", "-XX:G1MaxNewSizePercent=60", "-XX:G1MixedGCLiveThresholdPercent=50", "-XX:+AlwaysPreTouch"

			mods {
				"${modId}" {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			arg "-mixin.config=${modId}.mixins.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			//jvmArgs "-XXaltjvm=dcevm"

			args '--mod', project.modId, '--all', '--output', file('src/main/generated/'), '--existing', file('src/main/resources/')
			mods {
				"${modId}" {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets { main.resources.srcDirs += 'src/main/generated' }

mixin {
	add sourceSets.main, "${modId}.refmap.json"
	config "${modId}.mixins.json"

	debug.export = true
}

configurations {
	shade
}

dependencies {
	// Base
	minecraft("net.minecraftforge:forge:${minecraft_version}-${forge_version}")
	annotationProcessor("org.spongepowered:mixin:0.8.5:processor")

	// Libraries
	implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${minecraft_version}:${geckolib_version}")

	// Extras
	implementation fg.deobf("curse.maven:spark-361579:3767277")

	implementation fg.deobf("curse.maven:projecte-226410:${projecte_version}")
	implementation fg.deobf("curse.maven:patchouli-306770:${patchouli_version}")

	implementation fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
	implementation fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
	implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${jer_version}")
	implementation fg.deobf("curse.maven:just-enough-effect-descriptions-jeed-532286:${jeed_version}")

	implementation fg.deobf("curse.maven:appleskin-248787:${appleskin_version}")

	implementation fg.deobf("curse.maven:the-one-probe-245211:${top_version}")
	implementation fg.deobf("curse.maven:jade-324717:${jade_version}")

	implementation fg.deobf("curse.maven:configured-457570:${configured_version}")
	implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_version}")

	implementation fg.deobf("curse.maven:gamemenumodoption-353051:${gmmo_version}")

	compileOnly fg.deobf("curse.maven:iron-chests-228756:${ironchests_version}")
	compileOnly fg.deobf("curse.maven:iron-shulker-boxes-314911:${ironshulkerboxes_version}")
	compileOnly fg.deobf("curse.maven:iron-furnaces-237664:${ironfurnaces_version}")

	implementation fg.deobf("curse.maven:mob-battle-mod-268746:3815712")
	implementation fg.deobf("curse.maven:citadel-331936:3441028")
	runtimeOnly fg.deobf("curse.maven:l_ender-s-cataclysm-551586:${cataclysm_version}")

	compileOnly fg.deobf("curse.maven:curios-309927:${curios_version}")
	compileOnly fg.deobf("curse.maven:travelers-backpack-321117:${travelersbackpack_version}")

	implementation fg.deobf("curse.maven:worldedit-225608:${worldedit_version}")

	implementation fg.deobf("curse.maven:datafixerslayer-416519:${dfs_version}")

	// Temp
	implementation fg.deobf("curse.maven:performant-354143:4562378")
//	implementation fg.deobf("curse.maven:modernfix-790626:5259338")
//	implementation fg.deobf("curse.maven:ferritecore-429235:4074330")
}

repositories {
	maven {
		name = "CurseForge Maven"
		url = "https://www.cursemaven.com"
	}
	maven {
		name = "Progwml6 Maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		name = "GeckoLib Maven"
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven {
		name = "CubicInterpolation Maven"
		url = "https://cubicinterpolation.net/maven/"
	}
	maven {
		name = "Sonatype Maven"
		url = "https://oss.sonatype.org/content/repositories/snapshots"
	}
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : project.mod_name,
				"Specification-Vendor"    : "Chaos Awakens Team",
				"Specification-Version"   : project.mod_version,
				"Implementation-Title"    : project.mod_name,
				"Implementation-Vendor"   : "Chaos Awakens Team",
				"Implementation-Version"  : project.mod_version,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				"MixinConfigs": "${modId}.mixins.json"
		])
	}
}

shadowJar {
	classifier = ''
	configurations = [project.configurations.shade]
	relocate "commoble.databuddy", "${project.group}.shadow.commoble.databuddy"
}

reobf {
	shadowJar { }
}

tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')

processResources {
	exclude '**/.cache/'

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file:///${project.projectDir}/../ChaosMaven"
		}
	}
}